###yum安装

yum install docker-io </br>
启动

sudo systemctl enable docker </br>

sudo systemctl start docker </br>

systemctl status docker.service</br>


###ruby脚本安装 因网络原因失败</br>
###yum安装
###

###
man docker</br>
dokcer help</br>


###拉取镜像
docker search centos
docker pull centos</br>
docker pull

###运行
docker run -it --rm container_name bash

###列出镜像
docker image ls</br>
docker system df</br>

###删除本地镜像
docker image rm </br>

###镜像是容器的基础
docker commit
docker run --name webserver -d -p 80:80 nginx</br>
docker diff webserver</br>
docker build </br>
docker cp </br>
docker create </br>
docker diff</br>
docker history</br>
docker images</br>
docker info </br>
docker inspect 容器具体配置信息</br>
docker kill </br>
docker network</br>
docker ps </br>
docker rename </br>
docker restart </br>
docker run </br>
docker service </br>




###操作docker容器

启动容器<br>
docker run</br>
启动已终止的容器
docker container start/stop/restart</br>
后台运行<br>
-d 

###进入容器
docker exec -it container_name sh
docker start tomcat
docker exec -it tomcat sh

###导出导入容器
docker export</br>
docker import</br>

docker container rm 

docker container ls -a

###清除所有处于终止状态的的容器
docker container prune

##访问仓库
docker search

docker system df
docker image ls<br>

docker image rm 


docker pull nginx
docker run --name webserver -d -p 8098:80 nginx
docker exec -it webserver bash 
交互式终端进入webserver容器执行bash命令获得可操作shell 
docker commit --author --message webserver nginx:v2
docker history nginx:v2
dcoker run --name web2 -d -p 8099:80 nginx:v2


###使用Dockerfile定制镜像
FROM 指定基础镜像</br>
docker build -t nginx:v3 .
.表示当前目录，⚠️不能将Dockerfile放在硬盘的根目录执行


###应用前的准备工作：
启动容器就是启动主进程<br>
mysql服务器运行前需要数据库配置和初始化：ENTRYPOINT

ENV设置环境变量

⚠️VOLUME
数据库文件应该保存卷(volume)中
VOLUME /data
docker run -d -v mydata:/data xxx
使用mydata命名卷挂载到/data位置


EXPOSE声明端口
WORKDIR指定工作目录


⚠️多阶段构建
全部放入一个Dockerfile<br>
